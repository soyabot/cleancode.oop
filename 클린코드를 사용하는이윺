가독성
글이 잘 읽힌다
코드가 잘 읽힌다
= 유지보수 하기가 수월하다 

클린 코드라 지칭하는 수많은 원칙들, 조언들 

당연히 지키면 좋은데, 왜 지켜야 하는가

프로그램 정의
프로그램= 데이터 + 코드


추상과 구체

추상 = 사물을 정확하게 이해하기 위해 
여러가지 측면가운데 특정한 측면만을 가려내어 포착 어떤일면만을 추상하는 것은 다른 측면을 버림

-> 중요한 정보는 가려내어 남기고 
덜 중요한 정보는 생략하여 버린다.


추상 = 항상 구체적인 실재에서 시작해야한다

구체 -> 추상 
추상화 레벨 
인간은 추상화 능력이 매우 뛰어난 존재다

(정보 함축, 제거 추상화)->\
<-유추, 정보 재현 이해

컴퓨터 과학과 추상
컴퓨터는 0과 1 밖에 모른다고 배웟는데 
어떻게 고수준의 작업을 할까
1bit의 의미 = 존재성

1byte = 8 bit

문자 1개 char 숫자 int 
자료형 type = 데이터 bit 덩어리를 어떻게 읽을것인가

or연산 and연산 = 논리연산

데이터와 데이터가 만나 새로운 데이터를 만드는 방법

논리연산 = 데이터와 데이터가 만나 새로운 데이터를 만드는 방법

프로그램 = 데이터 + 코드

고수준 = 추상화 레벨이 높다
저수준 = 추상화 레벨이 낮다

컴퓨터 과학과 추상
기계어 -> 프로그래밍언어
하드웨어 -> 운영체제-> 어플리케이션

osi 7 layer 
application presentation layer session laye transport layer network layer data link layer physical layer

적절한 추상화는 복잡한 데이터와 복잡한 로직을 단순화하여 이해하기 쉽도록 돕는다

컴퓨터 과학은 추상화 과정이 조화롭게 겹겹이 쌓여서 만들어진다

읽기좋은 코드와 추상화과정이 무슨상관?

적절한 추상화는 복잡한 데이터와 복잡한 로직을 단순화하여 이해하기 쉽도록 돕는다 -읽기가 좋다

추상으로부터 구체를 유추하지 못한이유
- 추상화 과정에서 중요한 정보를 부각시키지 못했다
--> 상대적으로 덜 중요한 정보를 남기고 중요한 정보는 제거

해석자가 동일하게 공유하는 문맥이 없다
- 중요한 정보의 기준이 다를 수 있다
- 즉, 도메인 영역 별 추상화 기준이 다를 수 있다

잘못된 추상화가 야기하는 side effect가 정말크다

적절한 추상화는 해당 도메인의 문맥안에서 
정말 중요한 핵심 개념만 남겨서 표현하는 것

이름을 짓는다
가장 단순하면서도, 아주 중요한, 고도의 추상적 사고행위

이름 짓기 
사물의 특징을 뽑아내서 이름을 붙여줌

이름을 짓는다는 행위는, 추상적 사고를 기반으로 한다
1. 표현하고나 하는 구체에서 정말 중요한 핵심 개념만을 추출하여 잘 드러내는 표현
2. 우리 도메인의 문맥안에서 이해되는 용어

이름짓기 - 단수와 보수를 구부하기
끝에 -es를 붙여 어떤데이터가 단수인지 복수인지 구분

이름 줄이지 않기 
-가독성을 제물로 바쳐 효율성을 얻는 것
대부분 잃는 것에 비해 얻는 것이 적다
-자제하는 것이 좋으나 , 관용어처럼 많은 사람들이 자주 사용하는 줄임말 정도는 존재한다

- col -> col, latitude -> lat , logitude -> lon
- count -> cnt 추천 x
-은어 방언 사용하지 않기

좋은 코드 보고 습득하기

비슷한 상황에서 자주사용하는 단어, 습득하기
->pool candidate threshold
